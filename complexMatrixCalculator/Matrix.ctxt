#BlueJ class context
comment0.target=Matrix
comment0.text=\r\n\ @author\ ECI,\ 2023\r\n\r\n
comment1.params=data
comment1.target=Matrix(double[][][])
comment1.text=\r\n\ @param\ data[][[][]\ the\ data\ with\ the\ valors\ of\ the\ matrix.\ \r\n\ Create\ a\ new\ matrix.\ If\ there\ is\ an\ error\ in\ the\ data,\ {{{0,0}}}\ is\ assumed\r\n
comment10.params=other
comment10.target=Matrix\ multiply(Matrix)
comment10.text=\r\n\ @param\ other\ another\ object\ of\ type\ Matrix\r\n\ Multiply\ our\ matrix\ with\ another\ Matrix\ (if\ it\ is\ possible)\r\n\ @return\ our\ matrix\ that\ has\ been\ multiply\ (if\ it\ is\ possible);\r\n
comment11.params=other
comment11.target=boolean\ equals(Matrix)
comment11.text=\r\n\ @param\ other\ another\ Matrix\ to\ compare\ if\ our\ matrix\ and\ the\ other\ are\ equals\r\n\ Compare\ every\ number\ and\ array\ in\ the\ matrix\ to\ know\ if\ the\ Matrixs\ are\ equals\r\n\ @return\ true\ if\ are\ equals,\ else\ false\ \r\n
comment12.params=otra
comment12.target=boolean\ equals(java.lang.Object)
comment13.params=
comment13.target=void\ imprimirMatriz()
comment2.params=op
comment2.target=void\ setOp(char)
comment3.params=
comment3.target=char\ getOp()
comment4.params=
comment4.target=double[]\ dimension()
comment4.text=\r\n\ Get\ the\ dimension\ of\ the\ Matrix\r\n\ @return\ an\ array\ 1D.\ \r\n
comment5.params=f\ c
comment5.target=ComplexNumber\ get(int,\ int)
comment5.text=\r\n\ @param\ f,c\ indicates\ the\ position\ at\ the\ matrix\ (f\:\ "filas"),\ (c\:\ "columnas")\r\n\ Create\ a\ ComplexNumber\ with\ the\ first\ element\ real\ ant\ the\ other\ imaginary,\r\n\ in\ the\ Matrix\ those\ elements\ are\ in\ [f][c]--->[0]\ and\ [f][c]--->[1]\r\n\ @return\ a\ ComplexNumber\r\n
comment6.params=other
comment6.target=Matrix\ ComplexMultiply(Matrix)
comment7.params=m
comment7.target=Matrix\ add(Matrix)
comment7.text=\r\n\ @param\ m\ another\ Matrix\ which\ it\ will\ be\ sum\ with\ our\ Matrix\r\n\ Sum\ two\ matrix\ \r\n\ @return\ our\ matrix\ that\ has\ been\ sum.\r\n
comment8.params=m
comment8.target=Matrix\ substract(Matrix)
comment8.text=\r\n\ @param\ m\ another\ Matrix\ which\ it\ will\ be\ substract\ with\ our\ Matrix\r\n\ substract\ two\ matrix\ \r\n\ @return\ our\ matrix\ that\ has\ been\ substract.\r\n
comment9.params=
comment9.target=Matrix\ transpone()
comment9.text=\r\n\ Traspone\ our\ Matrix\ if\ the\ Matrix\ has\ as\ rows\ as\ columns\ (the\ rows\ will\ be\ our\ columns\ and\ the\ columns\ will\ be\ our\ rows)\r\n\ @return\ \ Our\ transponed\ Matrix\r\n
numComments=14
